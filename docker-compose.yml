version: '3.8'

services:
  # Standard wgrest (built from source)
  wgrest:
    build:
      context: ./wgrest-build
      dockerfile: Dockerfile
    container_name: wgrest
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - /etc/wireguard:/etc/wireguard
      - ./config/wgrest.yaml:/app/config.yaml
      - wgrest_data:/app/data
    environment:
      - WGREST_CONFIG=/app/config.yaml
    # ports not needed with network_mode: host

  # WireGuard container - only used for kernel module loading
  # Actual WireGuard interfaces run on host via wgrest
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /lib/modules:/lib/modules
    # Remove port mappings - wgrest will handle WireGuard directly on host
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    # Don't actually start WireGuard interfaces in container
    command: echo "WireGuard kernel module loaded"

  # Sync service: wgrest â†’ External PostgreSQL
  wgrest-sync:
    build: ./sync-service
    container_name: wgrest-sync
    restart: unless-stopped
    environment:
      - WGREST_API_URL=http://localhost:8080
      - WGREST_API_KEY=${WGREST_API_KEY}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - SYNC_INTERVAL=60  # seconds
    volumes:
      - /etc/wireguard:/etc/wireguard:ro
      - wgrest_data:/app/wgrest_data:ro
    depends_on:
      - wgrest
    network_mode: host

volumes:
  wgrest_data: